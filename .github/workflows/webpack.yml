name: NodeJS with Webpack

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  eslint:
    name: Run ESLint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'  # Use a single Node.js version for consistency

      - name: Install Dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
        continue-on-error: true  # Ensure the job continues even if ESLint finds errors


  build:
    name: Build and Test on ${{ matrix.os.name }} with Node.js ${{ matrix.node-version }}
    strategy:
      matrix:
        os:
          - { name: 'linux', image: 'ubuntu-latest' }
          - { name: 'windows', image: 'windows-latest' }
          - { name: 'macos', image: 'macos-latest' }
        node-version: [18.x, 20.x, 22.x]
    runs-on: ${{ matrix.os.image }}
    needs: eslint  # Ensures that ESLint runs before build

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run make

      - name: Set up Xvfb for Linux
        if: matrix.os.name == 'linux'
        run: |
          sudo apt-get update
          # Install XFCE desktop environment
          sudo apt-get install -y xfce4 xfce4-goodies
          
          # Install TigerVNC server
          sudo apt-get install -y tigervnc-standalone-server tigervnc-common
          
          # Set up VNC password (empty password for simplicity; modify as needed)
          mkdir -p ~/.vnc
          echo "" | vncpasswd -f > ~/.vnc/passwd
          chmod 600 ~/.vnc/passwd
          
          # Create a startup script for VNC
          echo -e "#!/bin/bash\nstartxfce4 &\n" > ~/.vnc/xstartup
          chmod +x ~/.vnc/xstartup
          
          # Start the VNC server on display :1
          vncserver :1 -geometry 1280x1024 -depth 24
          
          # Export the DISPLAY variable
          echo "DISPLAY=:1" >> $GITHUB_ENV

          # Install additional dependencies if required by your Electron app
          sudo apt-get install -y libgtk-3-0 libnotify-dev libnss3 libxss1 libasound2

      - name: Run Tests
        run: npm test