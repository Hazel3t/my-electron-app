name: NodeJS with Webpack

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  eslint:
    name: Run ESLint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x" # Use a single Node.js version for consistency

      - name: Install Dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
        continue-on-error: true # Ensure the job continues even if ESLint finds errors

  build-linux-windows:
    name: Build on ${{ matrix.os.name }} with Node.js ${{ matrix.node-version }}
    runs-on: ${{ matrix.os.image }}
    strategy:
      matrix:
        os:
          - { name: "linux", image: "ubuntu-latest" }
          - { name: "windows", image: "windows-latest" }
        node-version: [20.x] # "20.x" # Use a single Node.js version for consistency
    needs: eslint

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci

      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build

  build-macos:
    name: Build on macOS with Node.js ${{ matrix.node-version }}
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [20.x] # "20.x" # Use a single Node.js version for consistency
    needs: eslint

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci

      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build

  test_mac:
    name: Run Tests on macOS with Node.js ${{ matrix.node-version }}
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [20.x] # "20.x" # Use a single Node.js version for consistency
    needs: build-macos # Ensure tests run after the macOS build

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm test --timeout=15000

  build-windows:
    name: Build on macOS with Node.js ${{ matrix.node-version }}
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [20.x] # "20.x" # Use a single Node.js version for consistency
    needs: eslint

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci

      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build

  test_win:
    name: Run Tests on Windows with Node.js ${{ matrix.node-version }}
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [20.x] # "20.x" # Use a single Node.js version for consistency
    needs: build-windows # Ensure tests run after the Windows build

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm test --timeout=15000