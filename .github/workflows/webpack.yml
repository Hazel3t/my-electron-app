name: NodeJS with Webpack

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  eslint:
    name: Run ESLint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'  # Use a single Node.js version for consistency

      - name: Install Dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
        continue-on-error: true  # Ensure the job continues even if ESLint finds errors


  build:
    name: Build on ${{ matrix.os.name }} with Node.js ${{ matrix.node-version }}
    strategy:
      matrix:
        os:
          - { name: 'linux', image: 'ubuntu-latest' }
          - { name: 'windows', image: 'windows-latest' }
          - { name: 'macos', image: 'macos-latest' }
        node-version: [18.x, 20.x, 22.x]
    runs-on: ${{ matrix.os.image }}
    needs: eslint  # Ensures that ESLint runs before build

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run make


  test:
    name: Run Tests on ${{ matrix.os.name }} with Node.js ${{ matrix.node-version }}
    strategy:
      matrix:
        os:
          - { name: 'macos', image: 'macos-latest' }
        node-version: [18.x, 20.x, 22.x]
    runs-on: ${{ matrix.os.image }}
    needs: build  # Ensures that the build job runs before tests

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Run Tests
        run: npm test --timeout=15000