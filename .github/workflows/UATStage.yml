# This GitHub Actions workflow is designed to facilitate the User Acceptance Testing (UAT) stage for an Electron app.
# It allows for manual triggering of the workflow, which enables the extraction of artifacts from a specific workflow run,
# and the creation of a draft release with a tag that is specified by the user.
#
# Additional Features:
# 1. **Git Tag Validation**: Ensures that the specified tag does not already exist in the repository. If the tag exists,
#    the workflow fails with an appropriate message to prevent duplicate tagging.
# 2. **Pushing Git Tag**: After successfully creating and releasing, the new tag is pushed to the remote repository
#    to make it available for future reference and collaborations.
#
# Input Parameters:
# - tag_name: This parameter represents the tag name for the release, often following a semantic versioning format
#   such as 'v1.0.0'. This tag is used to label the release in GitHub.
# - run_id: This parameter specifies the ID of the workflow run that generated the artifact to be downloaded.
#   The run ID allows the workflow to locate and retrieve the precise artifacts associated with a specific prior run,
#   ensuring accuracy in testing and deployment.
#
#### Where to take run_id:
#
#  Example of URL: https://github.com/MartynovIvan/my-electron-app/actions/runs/12813175513/artifacts/2441968314
#     Explanation of URL: https://github.com/{owner}/{repo}/actions/runs/{run_id}/artifacts/{artifact_id}
#     From this URL, `12813175513` is the `run_id` that you can supply to the workflow.
#


name: UAT Stage

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag name for the UAT Stage pre-release (e.g., v1.0.0)"
        required: true
        type: string
      run_id:
        description: "The id of the workflow run where the desired download artifact was uploaded from."
        required: true
        type: number

permissions: write-all

jobs:
  uat:
    name: UAT Stage
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: macos-latest
    steps:

      - name: Check if Git Tag Exists
        run: |
          if git rev-parse "${{ github.event.inputs.tag_name }}" >/dev/null 2>&1
          then
            echo "Tag '${{ github.event.inputs.tag_name }}' already exists."
            exit 1
          else
            echo "Tag '${{ github.event.inputs.tag_name }}' does not exist. Proceeding."
          fi

      - name: Create Git Tag
        run: git tag ${{ github.event.inputs.tag_name }}

      - name: Checkout Test Repository
        uses: actions/checkout@v4
        with:
          repository: "vaisakhsasikumar/electron-app-tests"

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: vaisakhsasikumar/my-electron-app
          run-id: ${{ github.event.inputs.run_id }}

      - name: Set Permissions
        run: chmod 755 automated_testing/install.sh

      - name: Run automated_testing/install.sh
        run: automated_testing/install.sh

      - name: Run npm install
        run: npm install

      - name: Run Smoke Tests
        run: npm run test:smoke

      - name: Create Draft Pre-Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          name: "Pre-Release ${{ github.event.inputs.tag_name }} for UAT"
          files: "**/*.dmg"


      - name: Confirm Upload
        if: success()
        run: echo "Pre-Release for UAT created and .dmg uploaded successfully."
